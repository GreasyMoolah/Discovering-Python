# 05/02/2021 05:11
# Day-1: 4 Basic Concepts (4 hours): More on Variables in Python

# More on Variables in Python
# More on Variables in Python
# More on Variables in Python
# More on Variables in Python
# More on Variables in Python

>>> name = 'navin'
>>> id(name)
2531882938864

>>> a = 10
>>> b = a
>>> a
10

>>> b
10

>>> id(a)
2531876301392

>>> id(b)
2531876301392

>>> id(10)
2531876301392

>>> k = 10
>>> id(k)
2531876301392

>>> a =  9
>>> id(a)
2531876301360

>>> id(b)
2531876301392
>>> k = a
>>> id(k)
2531876301360

>>> b = 8
>>> PI = 3.14
>>> PI
3.14

>>> PI = 3.15
>>> type(PI)
<class 'float'>

# Data Types in Python
# Data Types in Python
# Data Types in Python
# Data Types in Python
# Data Types in Python

#None
  #-null or None in Python
#Numeric
  #-int
  #-float
  #-complex
  #-bool
#List
#Tuple
#Set
#String
#Range
#Dictionary (Map)

>>> num = 2.5
>>> type(num)
<class 'float'>

>>> num = 5
>>> type(num)
<class 'int'>

>>> num = 6+9j
>>> type(num)
<class 'complex'>

>>> a = 5.6
>>> b = int(a)
>>> type(b)
<class 'int'>

>>> b
5

>>> k = b
>>> k = float(b)
>>> k
5.0

>>> k = 6
>>> c = complex(b,k)
>>> c
(5+6j)

>>> b<k
True
>>> bool = b < k
>>> bool
True

>>> type(bool)
<class 'bool'>

>>> b > k
False

>>> int(True)
1

>>> int(False)
0

>>> lst = [25,36,45,12]
>>> type(lst)
<class 'list'>

>>> s = {25,36,45,15,12,25}
>>> s
{36, 25, 12, 45, 15}

>>> type(s)
<class 'set'>
>>> t = (25,36,4,57,12)
>>> type(t)
<class 'tuple'>

>>> str = "navin"
>>> type(str)
<class 'str'>
>>> st = 'a'
>>> type(st)
<class 'str'>

>>> range(10)
range(0, 10)

>>> list(range(10))
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

>>> list(range(2,10,2))
[2, 4, 6, 8]
>>> type(range(10))
<class 'range'>

>>> d = {'navin', 'samsung', ''rahul':Iphone','kiran':'oneplus'}
  File "<stdin>", line 1
    d = {'navin', 'samsung', ''rahul':Iphone','kiran':'oneplus'}
                               ^
SyntaxError: invalid syntax

>>> d = {'navin':'samsung', 'rahul':'Iphone','kiran':'oneplus'}
>>> d
{'navin': 'samsung', 'rahul': 'Iphone', 'kiran': 'oneplus'}

>>> d.keys
<built-in method keys of dict object at 0x00000225BC760D40>

>>> d.keys()
dict_keys(['navin', 'rahul', 'kiran'])

>>> d.values()
dict_values(['samsung', 'Iphone', 'oneplus'])

>>> d['rahul']
'Iphone'

>>> d.get('kiran')
'oneplus'




